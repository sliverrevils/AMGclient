import { useAuth } from "@/hooks/useAuth";
import { UserFullI } from "@/types/types"
import { useEffect, useRef, useState } from "react";
import styles from './usersScreen.module.scss';

export default function UsersScreen() {
    const [users, setUsers] = useState<UserFullI[]>([]);
    const { allUsers ,verificateUser, blockUserToggle} = useAuth();
    let { current: init } = useRef(true);
    const [currentUser, setCurrentUser] = useState<UserFullI | null>(null);



    useEffect(() => {
        if (init) {
            init = false;
            console.log('INIT')
            allUsers(setUsers);
        }
    }, [])

    return (
        <div className={styles.usersWrapper}>
            {currentUser 
            ? <div className={styles.userInfo}>
                <img src="svg/org/close_field.svg" onClick={()=>setCurrentUser(null)} className={styles.close} />
                <span className={styles.infoLine}>ID : {currentUser.id}</span>
                <span className={styles.infoLine}>–ò–º—è : {currentUser.name}</span>
                <span className={styles.infoLine}>Email : {currentUser.email}</span>
                <span className={styles.infoLine}>–ü–æ—Å—Ç  : {currentUser.post}</span>
                <span className={styles.infoLine}>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è  : {currentUser.is_verificated?"–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω":"–Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"}</span>
                <span className={styles.infoLine}>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞  : {currentUser.is_blocked?"–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω":"–Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"}</span>
                <span className={styles.infoLine}>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏  : {new Date(currentUser.createdAt).toLocaleString()}</span>
                <span className={styles.infoLine}>–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è  : {new Date(currentUser.updatedAt).toLocaleString()}</span>
                <div className={styles.controlBtns}>
                    {currentUser.role!=='admin'&&<div className="btn" onClick={()=>{blockUserToggle(currentUser.id,setUsers), setCurrentUser(null)}}>{currentUser.is_blocked?"–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å":"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"}</div>}
                    {!currentUser.is_verificated&&<div className="btn" onClick={()=>{verificateUser(currentUser.id,setUsers), setCurrentUser(null)}}>–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å</div>}
                </div>
                </div>
                : <><h2>–í—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</h2>
                    <table>
                        <thead>
                            <tr>
                                <th>üÜî</th>
                                <th>–ò–º—è</th>
                                <th>–ü–æ—Å—Ç</th>
                                <th>–°—Ç—Ä—É–∫—Ç—É—Ä–∞</th>
                                <th>–ü—Ä–∞–≤–∞</th>
                                <th>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</th>
                                <th>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è</th>
                                <th>–ë–ª–æ–∫</th>
                            </tr>
                        </thead>
                        <tbody>
                            {users.map(user => (
                                <tr key={user.id + 'users_list'} onClick={()=>setCurrentUser(user)}>
                                    <td>{user.id}</td>
                                    <td>{user.name}</td>
                                    <td>{user.post}</td>
                                    <td>{user.structure}</td>
                                    <td>{user.role}</td>
                                    <td>{new Date(user.createdAt).toLocaleDateString()}</td>
                                    <td>{user.is_verificated ? '‚úÖ' : 'üÜï'}</td>
                                    <td>{user.is_blocked ? 'üö´' : 'üÜó'}</td>
                                </tr>
                            ))}
                        </tbody>

                    </table>
                </>
            }
        </div>
    )

}
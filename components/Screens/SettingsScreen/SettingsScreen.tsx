import { useSelector } from "react-redux";
import styles from "./settings.module.scss";
import { StateReduxI } from "@/redux/store";
import { IMainStyle, UserFullI, UserI } from "@/types/types";
import { useEffect, useState } from "react";
import { useAuth } from "@/hooks/useAuth";
import { replaceFio } from "@/utils/funcs";
import { useDispatch } from "react-redux";
import { setMainStyleRedux } from "@/redux/appSlice";

export default function SettingsScreen() {
    const { mainStyle } = useSelector((state: StateReduxI) => state.app);
    const user = useSelector((state: any) => state.main.user);
    const dispatch = useDispatch();

    const { updateUser, changeUserPass } = useAuth();

    const [oldPass, setOldPass] = useState("");
    const [newPAss, setNewPass] = useState("");
    const [seePass, setSeePass] = useState<"password" | "text">("password");

    const PropLine = ({ title, value }) => (
        <div className={styles.propBlock}>
            <div className={styles.propTitle}>{title}</div>
            <div className={styles.propValue}>{value}</div>
        </div>
    );

    const onChangePass = () => {
        changeUserPass(user.userId, newPAss, () => {}, oldPass);
    };

    //SAVE TO LS
    useEffect(() => {
        localStorage.setItem("mainStyle", mainStyle);
    }, [mainStyle]);

    return (
        <div className={styles.settingsWrap}>
            <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h3>
            <div className={styles.changeMenuStyleBtn} onClick={() => dispatch(setMainStyleRedux(mainStyle === "row" ? "column" : "row"))}>
                <span>–ü–æ–ª–æ–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é : </span>
                <span>{mainStyle === "row" ? "—Å–±–æ–∫—É" : "—Å–≤–µ—Ä—Ö—É"}</span>
            </div>

            <PropLine title={`ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`} value={user.userId} />
            <PropLine title={`–†–æ–ª—å`} value={user.role === "admin" ? "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" : "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"} />
            <PropLine title={`–ò–º—è`} value={replaceFio(user.name)} />
            <PropLine title={`–õ–æ–≥–∏–Ω`} value={user.email} />

            <div className={styles.propBlock} style={{ gap: 7 }}>
                <div className={styles.propTitle} style={{ display: "flex", justifyContent: "space-between" }}>
                    <span>C–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è</span>{" "}
                    <span onMouseEnter={() => setSeePass("text")} onMouseLeave={() => setSeePass("password")} style={{ cursor: "pointer" }}>
                        üëÅÔ∏è
                    </span>
                </div>
                <input type={seePass} value={oldPass} onChange={(event) => setOldPass(event.target.value)} placeholder="—Å—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å" />
                {oldPass.length > 4 && <input type={seePass} value={newPAss} onChange={(event) => setNewPass(event.target.value)} placeholder="–Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å" />}
                {oldPass.length > 4 && newPAss.length > 4 && (
                    <div className={styles.chagePassBtn} onClick={onChangePass}>
                        –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                    </div>
                )}
            </div>
        </div>
    );
}
